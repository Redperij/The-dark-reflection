# This code is handling player's actions in the cretures_menu gui
# From the best to the worst equipment it converts manpower and infantry_equipment into the infantry_equipped, which is used by the army
# (Yeah, it is how we handle our race 'manpower', it is just restricted to produce eqipment unless we have enough manpower for that race (Usually equipment loss is close to the manpower loss))

# *And I know, that it could be done with 'for', but 'infantry_equipment' and '_6' '_7' - must be changed then, which I'm a little bit afraid to do. (We are still a submod, aren't we) 
count_race_equipped = {
	set_temp_variable = { effect_root = THIS }
	log = "[?effect_root.GetName|0] - count_race_equipped ####################" #debug

	log = "[?race_manpower|0] - race manpower and [?effect_root:race] - race" #debug
	meta_effect = {
		text = {
			set_variable = {
				race_manpower = effect_root:race_conscripts^[RACE_NUMBER]
			}
		}
		RACE_NUMBER = "[?effect_root:race]"
	}
	log = "[?race_manpower|0] - race manpower" #debug

	#infantry_equipment_[EQUIPMENT_TYPE]_7
	for_loop_effect = {
		start = 7
		end = 0
		compare = greater_than_or_equals
		add = -1
		value = i

		meta_effect = {
			text = {
				set_variable = {
					var = equipment_type_num
					value = num_equipment@infantry_equipment_[EQUIPMENT_TYPE]_[EQUIPMENT_NUM]
				}
			}
			EQUIPMENT_TYPE = "[?effect_root.GetEquipmentType]"
			EQUIPMENT_NUM = "[?i]"
		}
		log = "[?equipment_type_num|0] equip for [?i]" #debug
		if = {
			limit = {
				NOT = { check_variable = { equipment_type_num = 0 } }
				NOT = { check_variable = { race_manpower = 0 } }
				check_variable = { equipment_type_num < race_manpower }
			}
			meta_effect = {
				text = {
					# Adding converted value to stockpile
					add_equipment_to_stockpile = {
						type = infantry_equipped_[RACE]_[EQUIPMENT_TYPE]_[EQUIPMENT_NUM]
						amount = equipment_type_num
					}

					# Time for substracting
					multiply_variable = {
						var = equipment_type_num
						value = -1
					}
					# Substracting value from equipment
					add_equipment_to_stockpile = {
						type = infantry_equipment_[EQUIPMENT_TYPE]_[EQUIPMENT_NUM]
						amount = equipment_type_num
					}

					# Substracting value from race manpower
					add_to_variable = {
						var = race_manpower
						value = equipment_type_num
					}
					add_to_variable = {
						var = effect_root:race_conscripts^[RACE_NUMBER]
						value = equipment_type_num
					}
				}
				RACE_NUMBER = "[?effect_root:race]"
				EQUIPMENT_TYPE = "[?effect_root.GetEquipmentType]"
				RACE = "[?effect_root.GetRace]"
				EQUIPMENT_NUM = "[?i]"
			}
		}
		else_if = {
			limit = {
				NOT = { check_variable = { equipment_type_num = 0 } }
				NOT = { check_variable = { race_manpower = 0 } }
			}
			meta_effect = {
				text = {
					# Adding converted value to stockpile
					add_equipment_to_stockpile = {
						type = infantry_equipped_[RACE]_[EQUIPMENT_TYPE]_[EQUIPMENT_NUM]
						amount = race_manpower
					}

					# Time for substracting
					multiply_variable = {
						var = race_manpower
						value = -1
					}
					# Substracting value from equipment
					add_equipment_to_stockpile = {
						type = infantry_equipment_[EQUIPMENT_TYPE]_[EQUIPMENT_NUM]
						amount = race_manpower
					}
					# Substracting value from race manpower
					add_to_variable = {
						var = effect_root:race_conscripts^[RACE_NUMBER]
						value = race_manpower
					}

					multiply_variable = {
						var = race_manpower
						value = -1
					}
				}
				RACE_NUMBER = "[?effect_root:race]"
				EQUIPMENT_TYPE = "[?effect_root.GetEquipmentType]"
				RACE = "[?effect_root.GetRace]"
				EQUIPMENT_NUM = "[?i]"
			}

			subtract_from_variable = {
				var = race_manpower
				value = race_manpower
			}
		}
		clear_variable = equipment_type_num
		log = "[?race_manpower|0] - race manpower after [?i]" #debug
	}
}